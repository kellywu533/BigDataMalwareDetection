package edu.ucr.cs.cs179G.BigDataMalwareDetection

import org.apache.spark.SparkConf
import org.apache.spark.ml.classification.{LinearSVC, LinearSVCModel}
import org.apache.spark.ml.evaluation.BinaryClassificationEvaluator
import org.apache.spark.ml.feature.{HashingTF, StringIndexer, Tokenizer}
import org.apache.spark.ml.param.ParamMap
import org.apache.spark.ml.tuning.{ParamGridBuilder, TrainValidationSplit, TrainValidationSplitModel}
import org.apache.spark.ml.{Pipeline, PipelineModel}
import org.apache.spark.sql.{DataFrame, Dataset, Row, SparkSession}

object App {

  def main(args : Array[String]) {
    if (args.length != 1) {
      println("Usage <input file>")
      println("  - <input file> path to a parquet.zip file input")
      sys.exit(0)
    }
    val inputfile = args(0)
    val conf = new SparkConf
    if (!conf.contains("spark.master"))
      conf.setMaster("local[*]")
    println(s"Using Spark master '${conf.get("spark.master")}'")

    val spark = SparkSession
      .builder()
      .appName("cs179G BigDataMalwareDetection")
      .config(conf)
      .getOrCreate()

    val t1 = System.nanoTime
    try {
      // process the AndrooZoo data
      // read CSV file as a DataFrame
      val appData: DataFrame = spark.read.format("parquet").load(inputfile)

      import spark.implicits._

      appData.printSchema()
      appData.show()

    } finally {
      spark.stop
    }
  }
}
